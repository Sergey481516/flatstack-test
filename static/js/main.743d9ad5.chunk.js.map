{"version":3,"sources":["assets/img/cart.svg","reducers/user.js","reducers/cart.js","reducers/fetch.js","reducers/index.js","constants/user.js","constants/cart.js","constants/fetch.js","api/RequestError.js","api/index.js","actions/createActionHelper.js","actions/fetch.js","sagas/fetchSaga.js","actions/user.js","sagas/userSaga.js","sagas/index.js","store.js","pages/OrderPage/constants.js","pages/OrderPage/OrderForm/validation.js","components/Field/FieldError.js","components/controls/Input/Input.js","components/controls/Input/index.js","components/controls/InputNumber/InputNumber.js","components/controls/InputNumber/index.js","components/controls/InputMask/InputMask.js","components/controls/InputMask/index.js","components/controls/AutoComplete/AutoComplete.js","components/controls/AutoComplete/index.js","components/controls/InputCreditCard/InputCreditCard.js","components/controls/index.js","components/Field/Field.js","components/Field/ReduxField.js","components/Field/index.js","pages/OrderPage/OrderForm/Address.js","components/Button/Button.js","components/Button/index.js","components/Title/Title.js","components/Title/index.js","pages/OrderPage/OrderForm/ShippingInfo.js","pages/OrderPage/OrderForm/BillingInfo.js","pages/OrderPage/OrderForm/Payment.js","pages/OrderPage/OrderForm/OrderForm.js","components/Breadcrumbs/Breadcrumbs.js","components/Breadcrumbs/index.js","pages/OrderPage/OrderSummary/OrderSummaryItem.js","pages/OrderPage/OrderSummary/OrderSummaryList.js","pages/OrderPage/OrderSummary/OrderSummaryCosts.js","pages/OrderPage/OrderSummary/OrderSummaryTotal.js","components/TermsAndConditions/TermsAndConditions.js","components/TermsAndConditions/index.js","pages/OrderPage/OrderSummary/OrderSummary.js","pages/OrderPage/OrderSuccess/OrderSuccess.js","pages/OrderPage/OrderSuccess/index.js","selectors/cart.js","actions/cart.js","pages/OrderPage/OrderPage.js","pages/OrderPage/index.js","routes/index.js","components/Header/Brand.js","components/Header/CartBox.js","components/Header/Header.js","components/Header/index.js","components/Layout/Layout.js","components/Layout/index.js","components/Navigator/Navigator.js","components/Navigator/index.js","App.js","serviceWorker.js","fetchMock.js","index.js"],"names":["module","exports","defaultState","position","items","id","img","link","name","color","quantity","price","combineReducers","form","formReducer","user","state","action","type","Object","assign","coords","payload","country","city","cart","fetch","error","loading","datasource","RequestError","message","body","Error","Api","url","options","then","res","json","ok","data","SEND_ORDER_FORM","payloadMapper","createAction","fetchData","createActionHelper","mappingOptions","onSuccess","onError","setDatasource","setFetchLoading","setFetchError","setLoading","compileUrl","pathToRegexp","compile","call","put","console","takeEvery","getUserPosition","setUserPosition","getPosition","setPosition","getCurrentPosition","Promise","resolve","reject","navigator","geolocation","latitude","longitude","generateSagas","all","fetchSaga","userSaga","sagaMiddleware","createSagaMiddleware","FormStageId","SHIPPING","BILLING","PAYMENT","requiredFields","errorName","errorPrefix","emailReg","validate","values","errors","map","get","set","fieldName","prefix","generateRequiredError","email","test","FieldError","errorPosition","className","cn","defaultProps","Input","rest","InputNumber","props","InputMask","shouldItemRender","item","value","label","toLowerCase","indexOf","AutoComplete","labelFieldId","placeholder","useState","open","setOpen","inputProps","getItemValue","onMenuVisibilityChange","renderMenu","children","renderItem","isHighlighted","onSelect","onChange","UNKNOWN_CARD","InputCreditCard","setType","creditCard","onCreditCardTypeChanged","Field","src","help","meta","input","touched","hasError","control","controls","htmlFor","React","createElement","ReduxField","component","Address","ButtonType","PRIMARY","LINK","Button","onClick","Title","level","subTitle","ShippingInfo","handleChangeStage","autoFocus","mapValuesByKeys","keys","key","BillingInfo","onValueChange","cardMaskPart","cardMask","expireDateMask","securityCodeMask","slice","Payment","mask","guide","FormPage","ORDER_FORM_ID","reduxForm","handleSubmit","activeId","change","Component","useSelector","getFormValues","onSubmit","Breadcrumbs","activeIndex","findIndex","index","to","OrderSummaryItem","alt","href","OrderSummaryList","OrderSummaryCosts","subTotal","taxes","shipping","OrderSummaryTotal","total","TermsAndConditions","TAXES","OrderSummary","cartItems","reduce","acc","OrderSuccess","estimatedDate","orderNumber","pageToPrintRef","trigger","content","bodyClass","cartSelector","getCartItemsSelector","createSelector","getCartItemsCountSelector","Array","isArray","length","resetCart","breadcrumbItems","OrderPage","dispatch","useDispatch","useRef","setActiveId","isOrderSuccess","setOrderSuccess","orderData","setOrderData","ref","method","headers","JSON","stringify","routes","path","render","Brand","CartBox","numberOfGoods","width","height","Header","Layout","Navigator","useEffect","store","initialState","createStore","reducers","composeWithDevTools","applyMiddleware","run","configureStore","App","Boolean","window","location","hostname","match","fetchMock","post","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.743d9ad5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.e6dce4ce.svg\";","import { SET_USER_POSITION } from '../constants/user';\n\nconst defaultState = {\n  position: {},\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SET_USER_POSITION:\n      return Object.assign({}, state, {\n        position: {\n          coords: action.payload.coords,\n          country: action.payload.country,\n          city: action.payload.city,\n        },\n      });\n    default:\n      return state;\n  }\n};\n","import { RESET_CART } from '../constants/cart';\n\nconst defaultState = {\n  items: [\n    {\n      id: 1,\n      img: '/public/img/boot.png',\n      link: '#',\n      name: 'The Chelsea Boot',\n      color: 'Black',\n      quantity: 1,\n      price: 235,\n    },\n    {\n      id: 2,\n      img: '/public/img/bag.png',\n      link: '#',\n      name: 'The Twill Snap Backpack',\n      color: 'Reverse Denim + Drown leather',\n      quantity: 1,\n      price: 65,\n    },\n    {\n      id: 3,\n      img: '/public/img/zip-bag.png',\n      link: '#',\n      name: 'The Twill Zip Tote',\n      color: 'Reverse Denim + Drown leather',\n      quantity: 1,\n      price: 48,\n    },\n  ],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case RESET_CART:\n      return {\n        ...state,\n        items: [],\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  SET_DATASOURCE,\n  SET_FETCH_LOADING,\n  SET_FETCH_ERROR,\n} from '../constants/fetch';\n\n/**\n * anyId: {\n *   id: id,\n *   error: error,\n *   loading: loading,\n *   datasource: datasource\n * }\n */\nconst defaultState = {};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SET_FETCH_ERROR:\n      return Object.assign({}, state, {\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          error: action.payload.error,\n        },\n      });\n    case SET_FETCH_LOADING:\n      return Object.assign({}, state, {\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          loading: action.payload.loading,\n        },\n      });\n    case SET_DATASOURCE:\n      return Object.assign({}, state, {\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          id: action.payload.id,\n          datasource: action.payload.datasource,\n        },\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport userReducer from './user';\nimport cartReducer from './cart';\nimport fetch from './fetch';\n\nexport default combineReducers({\n  form: formReducer,\n  user: userReducer,\n  cart: cartReducer,\n  fetch: fetch,\n});\n","export const GET_USER_POSITION = 'GET_USER_POSITION';\nexport const SET_USER_POSITION = 'SET_USER_POSITION';\n","export const RESET_CART = 'RESET_CART';\n","export const FETCH = 'FETCH';\nexport const SET_DATASOURCE = 'SET_DATASOURCE';\nexport const SET_FETCH_LOADING = 'SET_FETCH_LOADING';\nexport const SET_FETCH_ERROR = 'SET_FETCH_ERROR';\n","class RequestError extends Error {\n  constructor(message, body) {\n    super(message);\n    this.message = message;\n    this.body = body;\n  }\n}\n\nexport default RequestError;\n","import RequestError from './RequestError';\n\nconst Api = {\n  fetch(url, options = {}) {\n    return fetch(url, options)\n      .then((res) => {\n        const body = res.json();\n\n        if (!res.ok) {\n          throw new RequestError('Request error', body);\n        }\n\n        return body;\n      })\n      .then((data) => data);\n  },\n  SEND_ORDER_FORM: '/order',\n};\n\nexport default Api;\n","import { createAction } from 'redux-actions';\n\nconst payloadMapper = (payload = {}) => payload;\n\nexport default (type) => createAction(type, payloadMapper);\n","import createActionHelper from './createActionHelper';\n\nimport {\n  FETCH,\n  SET_DATASOURCE,\n  SET_FETCH_LOADING,\n  SET_FETCH_ERROR,\n} from '../constants/fetch';\n\nexport const fetchData = (payload) =>\n  createActionHelper(FETCH)({\n    id: payload.id,\n    url: payload.url,\n    options: payload.options,\n    mappingOptions: payload.mappingOptions,\n    onSuccess: payload.onSuccess,\n    onError: payload.onError,\n  });\n\nexport const setDatasource = (payload) =>\n  createActionHelper(SET_DATASOURCE)(payload);\n\nexport const setFetchLoading = (id, loading) =>\n  createActionHelper(SET_FETCH_LOADING)({ id, loading });\n\nexport const setFetchError = (id, error) =>\n  createActionHelper(SET_FETCH_ERROR)({ id, error });\n","import { call, put, takeEvery } from 'redux-saga/effects';\n\nimport Api from '../api';\nimport pathToRegexp from 'path-to-regexp';\n\nimport { FETCH } from '../constants/fetch';\nimport {\n  setDatasource,\n  setFetchLoading,\n  setFetchError,\n} from '../actions/fetch';\n\nfunction compileUrl(url, mappingOptions = {}) {\n  return pathToRegexp.compile(url)(mappingOptions);\n}\n\nexport function* fetchData({ payload }) {\n  const { id } = payload;\n\n  try {\n    const { url, options, mappingOptions, onSuccess } = payload;\n    yield setLoading(id, true);\n    const datasource = yield call(\n      Api.fetch,\n      compileUrl(url, mappingOptions),\n      options\n    );\n    yield put(setDatasource({ id, datasource }));\n    if (typeof onSuccess === 'function') onSuccess(datasource);\n  } catch (e) {\n    const { onError } = payload;\n\n    yield put(setFetchError(id, e));\n    if (typeof onError === 'function') onError(e);\n    console.error(e);\n  } finally {\n    yield setLoading(id, false);\n  }\n}\n\nexport function* setLoading(id, loading) {\n  yield put(setFetchLoading(id, loading));\n}\n\nexport default [takeEvery(FETCH, fetchData)];\n","import createActionHelper from './createActionHelper';\nimport { GET_USER_POSITION, SET_USER_POSITION } from '../constants/user';\n\nexport const getUserPosition = () => createActionHelper(GET_USER_POSITION)();\nexport const setUserPosition = (coords, country, city) =>\n  createActionHelper(SET_USER_POSITION)({ coords, country, city });\n","import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { setUserPosition } from '../actions/user';\nimport { GET_USER_POSITION } from '../constants/user';\n\nfunction getCurrentPosition() {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nexport function* getPosition() {\n  try {\n    if (navigator.geolocation) {\n      const { coords } = yield call(getCurrentPosition);\n      const { latitude, longitude } = coords;\n\n      yield call(setPosition, { latitude, longitude }, 'Russin', 'Kazan');\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function* setPosition(coords, country, city) {\n  yield put(setUserPosition(coords, country, city));\n}\n\nexport default [takeEvery(GET_USER_POSITION, getPosition)];\n","import { all } from 'redux-saga/effects';\nimport fetchSaga from './fetchSaga';\nimport userSaga from './userSaga';\n\nconst generateSagas = () => {\n  return function*() {\n    yield all([...fetchSaga, ...userSaga]);\n  };\n};\n\nexport default generateSagas;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\nimport generateSagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState = {}) {\n  const store = createStore(\n    reducers,\n    initialState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  );\n  sagaMiddleware.run(generateSagas());\n  return store;\n}\n","export const FormStageId = {\n  SHIPPING: 'shipping',\n  BILLING: 'billing',\n  PAYMENT: 'payment',\n};\n\nexport const requiredFields = [\n  {\n    name: 'shipping.fullName',\n    errorName: 'full name',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.daytimePhone',\n    errorName: 'daytime phone',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.street',\n    errorName: 'street',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.city',\n    errorName: 'city',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.country',\n    errorName: 'country',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.zip',\n    errorName: 'zip',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'billing.fullName',\n    errorName: 'full name',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.street',\n    errorName: 'street',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.city',\n    errorName: 'city',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.country',\n    errorName: 'country',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.zip',\n    errorName: 'zip',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'payment.cardholder',\n    errorName: 'cardholder',\n    errorPrefix: 'payment',\n  },\n  {\n    name: 'payment.cardNumber',\n    errorName: 'card number',\n    errorPrefix: 'payment',\n  },\n  {\n    name: 'payment.expireDate',\n    errorName: 'expire date',\n    errorPrefix: 'payment',\n  },\n  {\n    name: 'payment.securityCode',\n    errorName: 'security code',\n    errorPrefix: 'payment',\n  },\n];\n","import get from 'lodash.get';\nimport set from 'lodash.set';\n\nimport { requiredFields } from '../constants';\n\nconst generateRequiredError = (fieldName, prefix = '') =>\n  `Please enter ${prefix} ${fieldName}`;\n\nconst emailReg = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nconst validate = (values) => {\n  const errors = {};\n\n  requiredFields.map(({ name, errorName, errorPrefix }) => {\n    if (!get(values, name)) {\n      set(errors, name, generateRequiredError(errorName, errorPrefix));\n    }\n  });\n\n  const email = get(values, 'billing.email');\n  if (email && !emailReg.test(email)) {\n    set(errors, 'billing.email', 'Email is not valid');\n  }\n\n  return errors;\n};\n\nexport default validate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nfunction FieldError({ error, errorPosition }) {\n  return (\n    <div\n      className={cn('form-field__error', `form-field__error--${errorPosition}`)}\n    >\n      {error}\n    </div>\n  );\n}\n\nFieldError.propTypes = {\n  error: PropTypes.string,\n  errorPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n};\n\nFieldError.defaultProps = {\n  errorPosition: 'top',\n};\n\nexport default FieldError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input({ type, ...rest }) {\n  return <input className=\"input\" type={type} {...rest} />;\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n};\n\nInput.defaultProps = {\n  type: 'text',\n};\n\nexport default Input;\n","import Input from './Input';\n\nexport default Input;\n","import React from 'react';\nimport RcInputNumber from 'rc-input-number';\n\nfunction InputNumber(props) {\n  return <RcInputNumber className=\"input-number\" {...props} />;\n}\n\nexport default InputNumber;\n","import InputNumber from './InputNumber';\n\nexport default InputNumber;\n","import React from 'react';\nimport MaskedInput from 'react-text-mask';\n\nfunction InputMask(props) {\n  return <MaskedInput className=\"input-mask\" {...props} />;\n}\n\nexport default InputMask;\n","import InputMask from './InputMask';\n\nexport default InputMask;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactAutoComplete from 'react-autocomplete';\n\nimport cn from 'classnames';\n\nconst shouldItemRender = (item, value) =>\n  !!~item.label.toLowerCase().indexOf(value.toLowerCase());\n\nfunction AutoComplete({\n  className,\n  labelFieldId,\n  items,\n  placeholder,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n\n  const getInputProps = () => ({\n    className: 'autocomplete__input',\n    placeholder: !open ? placeholder : '',\n  });\n  const onSelect = (value) => rest.onChange(value);\n\n  return (\n    <div\n      className={cn('autocomplete', className, {\n        'autocomplete--active': open,\n      })}\n    >\n      <ReactAutoComplete\n        inputProps={getInputProps()}\n        getItemValue={(item) => item[labelFieldId]}\n        shouldItemRender={shouldItemRender}\n        items={items}\n        onMenuVisibilityChange={setOpen}\n        renderMenu={(items) => (\n          <div className=\"autocomplete__menu\" children={items} />\n        )}\n        renderItem={(item, isHighlighted) => (\n          <div\n            className={cn('autocomplete__item', {\n              'autocomplete__item--active': isHighlighted,\n            })}\n          >\n            {item.label}\n          </div>\n        )}\n        {...rest}\n        onSelect={onSelect}\n      />\n    </div>\n  );\n}\n\nAutoComplete.propTypes = {\n  className: PropTypes.string,\n  labelFieldId: PropTypes.string,\n  items: PropTypes.array,\n};\n\nAutoComplete.defaultProps = {\n  labelFieldId: 'label',\n  items: [],\n};\n\nexport default AutoComplete;\n","import AutoComplete from './AutoComplete';\n\nexport default AutoComplete;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Cleave from 'cleave.js/react';\n\nimport cn from 'classnames';\n\nconst CardType = {\n  AMEX: 'amex',\n  VISA: 'visa',\n  DINERS: 'diners',\n  MASTERCARD: 'mastercard',\n  JCB: 'jcb',\n  DISCOVER: 'discover',\n};\n\nconst UNKNOWN_CARD = 'unknown';\n\nfunction InputCreditCard({ className, ...rest }) {\n  const [type, setType] = useState('unknown');\n\n  return (\n    <div\n      className={cn('input-credit-card', {\n        [`input-credit-card--${type}`]: type !== UNKNOWN_CARD,\n      })}\n    >\n      <Cleave\n        className=\"input-credit-card__input\"\n        options={{\n          creditCard: true,\n          onCreditCardTypeChanged: setType,\n        }}\n        {...rest}\n      />\n    </div>\n  );\n}\n\nInputCreditCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default InputCreditCard;\n","import Input from './Input';\nimport InputNumber from './InputNumber';\nimport InputMask from './InputMask';\nimport AutoComplete from './AutoComplete';\nimport InputCreditCard from './InputCreditCard';\n\nexport default {\n  Input,\n  InputNumber,\n  InputMask,\n  AutoComplete,\n  InputCreditCard,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FieldError from './FieldError';\nimport controls from '../controls';\n\nimport cn from 'classnames';\n\nfunction Field(props) {\n  const {\n    id,\n    src,\n    label,\n    help,\n    className,\n    meta,\n    name,\n    errorPosition,\n    input,\n    ...rest\n  } = props;\n  const { error, touched } = meta;\n  const hasError = error && touched;\n  const control = controls[src];\n\n  if (!control) {\n    throw new Error(`src ${src} not found!`);\n  }\n\n  return (\n    <div\n      className={cn('form-field', className, {\n        'form-field--invalid': hasError,\n      })}\n    >\n      {label && (\n        <label className=\"form-field__label\" htmlFor={id || name}>\n          {label}\n        </label>\n      )}\n      <div className=\"form-field__control-container\">\n        {hasError && <FieldError error={error} errorPosition={errorPosition} />}\n        {React.createElement(control, Object.assign({}, rest, input))}\n        {help && <div className=\"form-field__control-help\">{help}</div>}\n      </div>\n    </div>\n  );\n}\n\nField.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  src: PropTypes.string,\n  label: PropTypes.string,\n  help: PropTypes.string,\n  className: PropTypes.string,\n  meta: PropTypes.object,\n  errorPosition: PropTypes.oneOfType(['top', 'right', 'bottom', 'left']),\n  input: PropTypes.object,\n};\n\nexport default Field;\n","import React from 'react';\nimport { Field as ReduxFormField } from 'redux-form';\nimport Field from './Field';\n\nfunction ReduxField(props) {\n  return <ReduxFormField {...props} component={Field} />;\n}\n\nexport default ReduxField;\n","import Field from './ReduxField';\n\nexport default Field;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Field from '../../../components/Field';\n\nconst items = [\n  {\n    label: 'Russia',\n  },\n  {\n    label: 'USA',\n  },\n];\n\nfunction Address({ label, prefix }) {\n  return (\n    <>\n      <div className=\"order-form__fieldset\">\n        <Field\n          label={label}\n          src=\"Input\"\n          placeholder=\"Street Address\"\n          name={`${prefix}.street`}\n        />\n        <Field\n          src=\"Input\"\n          placeholder=\"Apt, Suite, Bldg, Gate Code. (optional)\"\n          name={`${prefix}.addressDetail`}\n        />\n      </div>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"Input\"\n          placeholder=\"City\"\n          name={`${prefix}.city`}\n          errorPosition=\"left\"\n        />\n      </div>\n      <div className=\"order-form__fieldset order-form__fieldset-country-zip\">\n        <Field\n          className=\"order-form__country-field\"\n          src=\"AutoComplete\"\n          items={items}\n          placeholder=\"Country\"\n          name={`${prefix}.country`}\n          errorPosition=\"left\"\n        />\n        <Field\n          className=\"order-form__zip-field\"\n          src=\"Input\"\n          placeholder=\"ZIP\"\n          name={`${prefix}.zip`}\n          errorPosition=\"right\"\n        />\n      </div>\n    </>\n  );\n}\n\nAddress.propTypes = {\n  label: PropTypes.string,\n  prefix: PropTypes.string,\n};\n\nexport default Address;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nconst ButtonType = {\n  PRIMARY: 'primary',\n  LINK: 'link',\n};\n\nfunction Button({ children, onClick, type }) {\n  return (\n    <button\n      onClick={onClick}\n      className={cn('button', {\n        'button--primary': type === ButtonType.PRIMARY,\n        'button--link': type === ButtonType.LINK,\n      })}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf([ButtonType.PRIMARY, ButtonType.LINK]),\n};\n\nButton.defaultProps = {\n  onClick: () => {},\n  type: ButtonType.PRIMARY,\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nfunction Title({ level, subTitle, className, children }) {\n  const Tag = (props) =>\n    React.createElement(`h${level}`, {\n      className: cn('title', className),\n      ...props,\n    });\n\n  return (\n    <Tag>\n      <div className=\"title__main\">{children}</div>\n      {subTitle && <div className=\"title__sub\">{subTitle}</div>}\n    </Tag>\n  );\n}\n\nTitle.propTypes = {\n  level: PropTypes.number,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n};\n\nTitle.defaultProps = {\n  level: 1,\n  subTitle: null,\n};\n\nexport default Title;\n","import Title from './Title';\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport get from 'lodash.get';\n\nimport Address from './Address';\nimport Field from '../../../components/Field';\nimport Button from '../../../components/Button';\nimport Title from '../../../components/Title';\n\nimport { FormStageId } from '../constants';\n\nfunction ShippingInfo({ handleChangeStage, validate, values }) {\n  const onChangeStage = () => {\n    const errors = validate(values);\n\n    if (!get(errors, FormStageId.SHIPPING)) {\n      handleChangeStage(FormStageId.BILLING);\n    }\n  };\n\n  return (\n    <>\n      <Title level={2} className=\"order-form__title\">\n        Shipping Info\n      </Title>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"Input\"\n          label=\"Recipient\"\n          placeholder=\"Full Name\"\n          name=\"shipping.fullName\"\n          autoFocus={true}\n        />\n        <Field\n          className=\"order-form__daytime-phone-field\"\n          src=\"InputNumber\"\n          placeholder=\"Daytime Phone\"\n          help=\"For delivery questions only\"\n          name=\"shipping.daytimePhone\"\n          errorPosition=\"left\"\n        />\n      </div>\n      <Address label=\"Address\" prefix=\"shipping\" />\n      <Button onClick={onChangeStage}>Continue</Button>\n    </>\n  );\n}\n\nShippingInfo.propTypes = {\n  handleChangeStage: PropTypes.func,\n  validate: PropTypes.func,\n  values: PropTypes.object,\n};\n\nexport default ShippingInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport get from 'lodash.get';\n\nimport Address from './Address';\nimport Field from '../../../components/Field';\nimport Button from '../../../components/Button';\nimport Title from '../../../components/Title';\n\nimport { FormStageId } from '../constants';\n\nconst mapValuesByKeys = (keys, values) =>\n  keys.map((key) => ({\n    key: 'billing.' + key,\n    value: get(values, ['shipping', key]),\n  }));\n\nfunction BillingInfo({ handleChangeStage, onValueChange, validate, values }) {\n  const onChangeStage = () => {\n    const errors = validate(values);\n\n    if (!get(errors, FormStageId.BILLING)) {\n      handleChangeStage(FormStageId.PAYMENT);\n    }\n  };\n\n  const changeSameShipping = () =>\n    onValueChange(\n      mapValuesByKeys(\n        ['fullName', 'street', 'addressDetail', 'city', 'country', 'zip'],\n        values\n      )\n    );\n\n  return (\n    <>\n      <Title\n        level={2}\n        className=\"order-form__title\"\n        subTitle={<span onClick={changeSameShipping}>Same as shipping</span>}\n      >\n        Billing Information\n      </Title>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"Input\"\n          label=\"Billing Contact\"\n          placeholder=\"Full Name\"\n          name=\"billing.fullName\"\n        />\n        <Field src=\"Input\" placeholder=\"Email Address\" name=\"billing.email\" />\n      </div>\n      <Address label=\"Billing Information\" prefix=\"billing\" />\n      <Button onClick={onChangeStage}>Continue</Button>\n    </>\n  );\n}\n\nBillingInfo.propTypes = {\n  handleChangeStage: PropTypes.func,\n  onValueChange: PropTypes.func,\n  validate: PropTypes.func,\n  values: PropTypes.object,\n};\n\nexport default BillingInfo;\n","import React from 'react';\n\nimport Title from '../../../components/Title';\nimport Field from '../../../components/Field';\nimport Button from '../../../components/Button';\n\nconst cardMaskPart = [/[1-9]/, /[1-9]/, /[1-9]/, /[1-9]/];\nconst cardMask = [\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n];\nconst expireDateMask = [/[0-1]/, /[0-2]/, '/', /[0-9]/, /[0-9]/];\nconst securityCodeMask = cardMaskPart.slice();\n\nfunction Payment() {\n  return (\n    <>\n      <Title level={2} className=\"order-form__title\">\n        Payment\n      </Title>\n      <div className=\"order-form__security-help\">\n        This is a secure 128-bit SSL encrypted payment\n      </div>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"Input\"\n          label=\"Cardholder Name\"\n          placeholder=\"Name as it appears on your card\"\n          name=\"payment.cardholder\"\n        />\n      </div>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"InputCreditCard\"\n          label=\"Card Number\"\n          mask={cardMask}\n          placeholder=\"XXXX XXXX XXXX XXXX XXXX\"\n          name=\"payment.cardNumber\"\n        />\n      </div>\n      <div className=\"order-form__fieldset order-form__fieldset--row\">\n        <Field\n          className=\"order-form__expire-date-field\"\n          src=\"InputMask\"\n          mask={expireDateMask}\n          label=\"Expire Date\"\n          placeholder=\"MM / YY\"\n          name=\"payment.expireDate\"\n        />\n        <Field\n          className=\"order-form__security-code-field\"\n          src=\"InputMask\"\n          guide={false}\n          mask={securityCodeMask}\n          label=\"Security Code\"\n          name=\"payment.securityCode\"\n          errorPosition=\"right\"\n        />\n      </div>\n      <Button>Pay Securely</Button>\n    </>\n  );\n}\n\nexport default Payment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\n\nimport { reduxForm, getFormValues } from 'redux-form';\nimport validate from './validation';\n\nimport { FormStageId } from '../constants';\n\nimport ShippingInfo from './ShippingInfo';\nimport BillingInfo from './BillingInfo';\nimport Payment from './Payment';\n\nconst FormPage = {\n  [FormStageId.SHIPPING]: ShippingInfo,\n  [FormStageId.BILLING]: BillingInfo,\n  [FormStageId.PAYMENT]: Payment,\n};\n\nexport const ORDER_FORM_ID = 'orderForm';\n\nfunction OrderForm({\n  handleSubmit,\n  handleChangeStage,\n  activeId,\n  validate,\n  form,\n  change,\n}) {\n  const Component = FormPage[activeId];\n  const values = useSelector(getFormValues(form));\n  const onValueChange = (values) =>\n    values.map(({ key, value }) => change(key, value));\n\n  return (\n    <form className=\"order-form\" onSubmit={handleSubmit}>\n      <Component\n        handleChangeStage={handleChangeStage}\n        onValueChange={onValueChange}\n        validate={validate}\n        values={values}\n      />\n    </form>\n  );\n}\n\nOrderForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  handleChangeStage: PropTypes.func,\n  activeId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  validate: PropTypes.func,\n  form: PropTypes.string,\n  change: PropTypes.func,\n};\n\nexport default reduxForm({\n  form: ORDER_FORM_ID,\n  validate,\n})(OrderForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nfunction Breadcrumbs({ items, activeId, onClick }) {\n  const activeIndex = items.findIndex(({ id }) => id === activeId);\n\n  return (\n    <div className=\"breadcrumbs\">\n      <ul className=\"breadcrumbs__list\">\n        {items.map(({ id, link, label }, index) => (\n          <li\n            key={id}\n            className={cn('breadcrumbs__item', {\n              'breadcrumbs__item--active': id === activeId,\n              'breadcrumbs__item--link': index < activeIndex,\n            })}\n            onClick={() => {\n              if (index < activeIndex) onClick(id);\n            }}\n          >\n            {link ? <Link to={link}>{label}</Link> : label}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.array,\n  activeId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onClick: PropTypes.func,\n};\n\nBreadcrumbs.defaultProps = {\n  items: [],\n  activeId: null,\n  onClick: () => {},\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OrderSummaryItem({ id, name, img, color, quantity, price, link }) {\n  return (\n    <li key={id} className=\"order-summary__item order-summary-item\">\n      <div className=\"order-summary-item__img\">\n        <img src={img} alt=\"\" />\n      </div>\n      <div className=\"order-summary-item__info\">\n        <a className=\"order-summary-item__name\" href={link}>\n          {name}\n        </a>\n        <div className=\"order-summary-item__color\">{color}</div>\n        <div className=\"order-summary-item__quantity\">Quantity: {quantity}</div>\n      </div>\n      <div className=\"order-summary-item__cost\">${price}</div>\n    </li>\n  );\n}\n\nOrderSummaryItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  name: PropTypes.string,\n  img: PropTypes.string,\n  color: PropTypes.string,\n  quantity: PropTypes.number,\n  price: PropTypes.number,\n};\n\nexport default OrderSummaryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport OrderSummaryItem from './OrderSummaryItem';\n\nfunction OrderSummaryList({ items }) {\n  return (\n    <ul className=\"order-summary__list\">\n      {items.map((item) => (\n        <OrderSummaryItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n}\n\nOrderSummaryList.propTypes = {\n  items: PropTypes.array,\n};\n\nOrderSummaryList.defaultProps = {\n  items: [],\n};\n\nexport default OrderSummaryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OrderSummaryCosts({ subTotal, taxes, shipping }) {\n  return (\n    <div className=\"order-summary__costs order-summary-costs\">\n      <ul className=\"order-summary-costs__list\">\n        <li className=\"order-summary-costs__item\">\n          <div className=\"order-summary-costs__name\">Subtotal</div>\n          <div className=\"order-summary-costs__value\">${subTotal}</div>\n        </li>\n        <li className=\"order-summary-costs__item\">\n          <div className=\"order-summary-costs__name\">Shipping</div>\n          <div className=\"order-summary-costs__value\">{shipping}</div>\n        </li>\n        <li className=\"order-summary-costs__item\">\n          <div className=\"order-summary-costs__name\">Taxes</div>\n          <div className=\"order-summary-costs__value\">${taxes}</div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nOrderSummaryCosts.propTypes = {\n  subTotal: PropTypes.number,\n  taxes: PropTypes.number,\n  shipping: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default OrderSummaryCosts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OrderSummaryTotal({ total }) {\n  return (\n    <div className=\"order-summary__total\">\n      <div className=\"order-summary__total-name\">Total</div>\n      <div className=\"order-summary__total-value\">${total}</div>\n    </div>\n  );\n}\n\nOrderSummaryTotal.propTypes = {\n  total: PropTypes.number,\n};\n\nexport default OrderSummaryTotal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nfunction TermsAndConditions({ link, className }) {\n  return (\n    <div className={cn('terms', className)}>\n      <span className=\"terms__text\">\n        All purchases are subject to our{' '}\n        <a className=\"terms__link\" href={link}>\n          Terms and Conditions\n        </a>\n        .\n      </span>\n    </div>\n  );\n}\n\nTermsAndConditions.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n};\n\nTermsAndConditions.defaultProps = {\n  link: '#',\n};\n\nexport default TermsAndConditions;\n","import TermsAndConditions from './TermsAndConditions';\n\nexport default TermsAndConditions;\n","import React, { useState } from 'react';\n\nimport Title from '../../../components/Title';\nimport OrderSummaryList from './OrderSummaryList';\nimport OrderSummaryCosts from './OrderSummaryCosts';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport TermsAndConditions from '../../../components/TermsAndConditions';\n\nconst TAXES = 12.12;\nconst SHIPPING = 'Free';\n\nfunction OrderSummary({ cartItems }) {\n  const [items] = useState(cartItems);\n\n  const subTotal = items.reduce((acc, { price }) => {\n    return acc + price;\n  }, 0);\n  const total = subTotal + TAXES;\n\n  return (\n    <div className=\"order-summary\">\n      <Title\n        className=\"order-summary__title\"\n        level={3}\n        subTitle={\n          <a href=\"#\" className=\"order-summary__edit-link\">\n            edit order\n          </a>\n        }\n      >\n        Order Summary\n      </Title>\n      <OrderSummaryList items={items} />\n      <OrderSummaryCosts\n        subTotal={subTotal}\n        shipping={SHIPPING}\n        taxes={TAXES}\n      />\n      <OrderSummaryTotal total={total} />\n      <TermsAndConditions className=\"order-summary__terms\" />\n    </div>\n  );\n}\n\nexport default OrderSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactToPrint from 'react-to-print';\nimport Title from '../../../components/Title';\nimport Button from '../../../components/Button';\n\nfunction OrderSuccess({ estimatedDate, orderNumber, pageToPrintRef }) {\n  return (\n    <div className=\"order-success\">\n      <Title className=\"order-success__title\" level={2}>\n        Thank you for your order!\n      </Title>\n      <div className=\"order-success__content\">\n        <div className=\"order-success__number\">\n          Order number is: {orderNumber}\n        </div>\n        <div className=\"order-success__email\">\n          Your will receive an email confirmation shortly to{' '}\n          <a href=\"mailto:name@rapidtables.com\">jonathan.smith@gmail.com</a>\n        </div>\n        <div className=\"order-success__estimated-date\">\n          Estimated delivery Day is <strong>{estimatedDate}</strong>\n        </div>\n        <div className=\"order-success__print\">\n          <ReactToPrint\n            trigger={() => <Button type=\"link\">Print Recipe</Button>}\n            content={() => pageToPrintRef}\n            bodyClass=\"body--print\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOrderSuccess.propTypes = {\n  estimatedDate: PropTypes.string,\n  orderNumber: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default OrderSuccess;\n","import OrderSuccess from './OrderSuccess';\n\nexport default OrderSuccess;\n","import { createSelector } from 'reselect';\n\nexport const cartSelector = (state) => state.cart;\n\nexport const getCartItemsSelector = () =>\n  createSelector(\n    cartSelector,\n    (cart) => cart.items || []\n  );\n\nexport const getCartItemsCountSelector = () =>\n  createSelector(\n    cartSelector,\n    (cart) => (Array.isArray(cart.items) ? cart.items.length : 0)\n  );\n","import createActionHelper from './createActionHelper';\n\nimport { RESET_CART } from '../constants/cart';\n\nexport const resetCart = () => createActionHelper(RESET_CART)();\n","import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ORDER_FORM_ID } from './OrderForm/OrderForm';\nimport { fetchData } from '../../actions/fetch';\n\nimport Breadcrumbs from '../../components/Breadcrumbs';\nimport OrderForm from './OrderForm/OrderForm';\nimport OrderSummary from './OrderSummary/OrderSummary';\nimport OrderSuccess from './OrderSuccess';\n\nimport { FormStageId } from './constants';\n\nimport cn from 'classnames';\nimport get from 'lodash.get';\nimport Api from '../../api';\nimport { getCartItemsSelector } from '../../selectors/cart';\nimport { resetCart } from '../../actions/cart';\n\nconst breadcrumbItems = [\n  {\n    id: FormStageId.SHIPPING,\n    label: 'Shipping',\n  },\n  {\n    id: FormStageId.BILLING,\n    label: 'Billing',\n  },\n  {\n    id: FormStageId.PAYMENT,\n    label: 'Payment',\n  },\n];\n\nfunction OrderPage() {\n  const dispatch = useDispatch();\n  const cartItems = useSelector(getCartItemsSelector());\n  const pageToPrintRef = useRef(null);\n\n  const [activeId, setActiveId] = useState(FormStageId.SHIPPING);\n  const [isOrderSuccess, setOrderSuccess] = useState(false);\n  const [orderData, setOrderData] = useState(null);\n\n  const onSubmit = (values) => {\n    dispatch(\n      fetchData({\n        id: ORDER_FORM_ID,\n        url: Api.SEND_ORDER_FORM,\n        options: {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(values),\n        },\n        onSuccess: (data) => {\n          setOrderData(data);\n          setOrderSuccess(true);\n          dispatch(resetCart());\n        },\n      })\n    );\n  };\n\n  return (\n    <div ref={pageToPrintRef} className=\"order-page\">\n      <div\n        className={cn({\n          'order-page__form': !isOrderSuccess,\n          'order-page__success': isOrderSuccess,\n        })}\n      >\n        {!isOrderSuccess ? (\n          [\n            <Breadcrumbs\n              key=\"breadcrumbs\"\n              items={breadcrumbItems}\n              activeId={activeId}\n              onClick={setActiveId}\n            />,\n            <OrderForm\n              key=\"orderForm\"\n              onSubmit={onSubmit}\n              activeId={activeId}\n              handleChangeStage={setActiveId}\n            />,\n          ]\n        ) : (\n          <OrderSuccess\n            pageToPrintRef={get(pageToPrintRef, 'current', null)}\n            {...orderData}\n          />\n        )}\n      </div>\n      <div\n        className={cn('order-page__summary', {\n          'order-page__summary--translucent': isOrderSuccess,\n        })}\n      >\n        <OrderSummary cartItems={cartItems} />\n      </div>\n    </div>\n  );\n}\n\nexport default OrderPage;\n","import OrderPage from './OrderPage';\n\nexport default OrderPage;\n","import React from 'react';\n\nimport OrderPage from '../pages/OrderPage';\n\nconst routes = [\n  {\n    path: '/order',\n    render: (props) => <OrderPage {...props} />,\n  },\n];\n\nexport default routes;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nfunction Brand() {\n  return (\n    <Link to=\"/\" className=\"header__brand\">\n      Front-end Developer Test Task\n    </Link>\n  );\n}\n\nexport default Brand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport cart from '../../assets/img/cart.svg';\n\nfunction CartBox({ numberOfGoods }) {\n  return (\n    <Link to=\"/order\" className=\"header__cart-box cart-box\">\n      {!!numberOfGoods && <div className=\"cart-box__text\">cart</div>}\n      <div className=\"cart-box__cart\">\n        <div className=\"cart-box__goods\">\n          {!!numberOfGoods && numberOfGoods}\n        </div>\n        <img src={cart} alt=\"cart-box\" width=\"21\" height=\"16\" />\n      </div>\n    </Link>\n  );\n}\n\nCartBox.propTypes = {\n  numberOfGoods: PropTypes.number,\n};\n\nexport default CartBox;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getCartItemsCountSelector } from '../../selectors/cart';\n\nimport Brand from './Brand';\nimport CartBox from './CartBox';\n\nfunction Header() {\n  const numberOfGoods = useSelector(getCartItemsCountSelector());\n\n  return (\n    <div className=\"header__container\">\n      <header className=\"header\">\n        <Brand />\n        <CartBox numberOfGoods={numberOfGoods} />\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\r\nimport Header from '../Header';\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <main className=\"main\">{children}</main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import Layout from './Layout';\r\n\r\nexport default Layout;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUserPosition } from '../../actions/user';\n\nfunction Navigator() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUserPosition());\n  }, [dispatch]);\n  return null;\n}\n\nexport default Navigator;\n","import Navigator from './Navigator';\n\nexport default Navigator;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport './scss/main.scss';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport routes from './routes';\n\nimport Layout from './components/Layout';\nimport Navigator from './components/Navigator';\n\nconst store = configureStore();\n\n/** принт сломался сука падла!!!!!\n * данные по координатам и их заполнение, детект страны по городу, список стран\n * CI/CD\n */\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Navigator />\n      <Router>\n        <Layout>\n          <Switch>\n            {routes.map((props, index) => (\n              <Route key={index} {...props} />\n            ))}\n          </Switch>\n        </Layout>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// prettier-ignore\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import fetchMock from 'fetch-mock';\n\nfetchMock.post('/order', () => ({\n  estimatedDate: 'Friday 1st April 2016',\n  orderNumber: 188787788,\n}));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// TODO вместо бекенда\nimport './fetchMock';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}