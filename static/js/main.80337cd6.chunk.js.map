{"version":3,"sources":["assets/img/cart.svg","reducers/user.js","reducers/cart.js","reducers/fetch.js","reducers/index.js","constants/user.js","constants/cart.js","constants/fetch.js","api/RequestError.js","api/index.js","actions/createActionHelper.js","actions/fetch.js","sagas/fetchSaga.js","actions/user.js","sagas/userSaga.js","sagas/index.js","store.js","pages/OrderPage/constants.js","pages/OrderPage/OrderForm/validation.js","components/Field/FieldError.js","components/controls/Input/Input.js","components/controls/Input/index.js","components/controls/InputNumber/InputNumber.js","components/controls/InputNumber/index.js","components/controls/InputMask/InputMask.js","components/controls/InputMask/index.js","components/controls/AutoComplete/AutoComplete.js","components/controls/AutoComplete/index.js","components/controls/InputCreditCard/InputCreditCard.js","components/controls/index.js","components/Field/Field.js","components/Field/ReduxField.js","components/Field/index.js","components/Button/Button.js","components/Button/index.js","pages/OrderPage/OrderForm/Address.js","components/Title/Title.js","components/Title/index.js","pages/OrderPage/OrderForm/ShippingInfo.js","pages/OrderPage/OrderForm/BillingInfo.js","pages/OrderPage/OrderForm/Payment.js","selectors/user.js","pages/OrderPage/OrderForm/OrderForm.js","components/Breadcrumbs/Breadcrumbs.js","components/Breadcrumbs/index.js","pages/OrderPage/OrderSummary/OrderSummaryItem.js","pages/OrderPage/OrderSummary/OrderSummaryList.js","pages/OrderPage/OrderSummary/OrderSummaryCosts.js","pages/OrderPage/OrderSummary/OrderSummaryTotal.js","components/TermsAndConditions/TermsAndConditions.js","components/TermsAndConditions/index.js","pages/OrderPage/OrderSummary/OrderSummary.js","pages/OrderPage/OrderSuccess/OrderSuccess.js","pages/OrderPage/OrderSuccess/index.js","selectors/cart.js","actions/cart.js","pages/OrderPage/OrderPage.js","pages/OrderPage/index.js","routes/index.js","components/Header/Brand.js","components/Header/CartBox.js","components/Header/Header.js","components/Header/index.js","components/Layout/Layout.js","components/Layout/index.js","components/Navigator/Navigator.js","components/Navigator/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","defaultState","position","items","id","img","link","name","color","quantity","price","combineReducers","form","formReducer","user","state","action","type","Object","assign","coords","payload","country","city","postalCode","cart","fetch","error","loading","datasource","RequestError","message","body","Error","Api","url","options","then","res","json","ok","data","SEND_ORDER_FORM","GET_ADDRESS_BY_GEOCODE","GET_COUNTRIES","payloadMapper","createAction","fetchData","createActionHelper","mappingOptions","onSuccess","onError","setDatasource","setFetchLoading","setFetchError","fetchSaga","setLoading","compileUrl","pathToRegexp","compile","call","put","console","takeEvery","getUserPosition","setUserPosition","getPosition","setPosition","geocodeBasePath","getCurrentPosition","Promise","resolve","reject","navigator","geolocation","latitude","longitude","method","get","length","components","find","kind","generateSagas","all","userSaga","sagaMiddleware","createSagaMiddleware","FormStageId","SHIPPING","BILLING","PAYMENT","requiredFields","errorName","errorPrefix","emailReg","validate","values","errors","map","set","fieldName","prefix","generateRequiredError","email","test","FieldError","errorPosition","className","cn","defaultProps","Input","rest","InputNumber","props","InputMask","AutoComplete","labelFieldId","placeholder","useState","open","setOpen","inputProps","getItemValue","item","shouldItemRender","value","toLowerCase","indexOf","onMenuVisibilityChange","renderMenu","children","renderItem","isHighlighted","onSelect","onChange","UNKNOWN_CARD","InputCreditCard","setType","creditCard","onCreditCardTypeChanged","Field","src","label","help","meta","input","touched","hasError","control","controls","htmlFor","React","createElement","ReduxField","component","ButtonType","PRIMARY","LINK","TRANSPARENT","Button","onClick","buttonType","Address","onCountryDetect","countries","Title","level","subTitle","ShippingInfo","handleChangeStage","autoFocus","mapValuesByKeys","keys","key","BillingInfo","onValueChange","cardMaskPart","cardMask","expireDateMask","securityCodeMask","slice","Payment","mask","guide","userSelector","getUserPositionSelector","createSelector","FormPage","ORDER_FORM_ID","reduxForm","handleSubmit","activeId","change","handleDetectCountry","Component","useSelector","getFormValues","useEffect","isEmpty","onSubmit","Breadcrumbs","activeIndex","findIndex","index","to","OrderSummaryItem","alt","href","OrderSummaryList","OrderSummaryCosts","subTotal","taxes","shipping","OrderSummaryTotal","total","TermsAndConditions","TAXES","OrderSummary","cartItems","reduce","acc","OrderSuccess","estimatedDate","orderNumber","pageToPrintRef","trigger","content","bodyClass","cartSelector","getCartItemsSelector","getCartItemsCountSelector","Array","isArray","resetCart","breadcrumbItems","OrderPage","dispatch","useDispatch","useRef","setActiveId","isOrderSuccess","setOrderSuccess","orderData","setOrderData","setCountries","ref","headers","JSON","stringify","e","routes","path","render","Brand","CartBox","numberOfGoods","width","height","Header","Layout","Navigator","store","initialState","createStore","reducers","composeWithDevTools","applyMiddleware","run","configureStore","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80337cd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.e6dce4ce.svg\";","import { SET_USER_POSITION } from '../constants/user';\n\nconst defaultState = {\n  position: {},\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SET_USER_POSITION:\n      return Object.assign({}, state, {\n        position: {\n          coords: action.payload.coords,\n          country: action.payload.country,\n          city: action.payload.city,\n          postalCode: action.payload.postalCode,\n        },\n      });\n    default:\n      return state;\n  }\n};\n","import { RESET_CART } from '../constants/cart';\n\nconst defaultState = {\n  items: [\n    {\n      id: 1,\n      img: '/static/img/boot.png',\n      link: '#',\n      name: 'The Chelsea Boot',\n      color: 'Black',\n      quantity: 1,\n      price: 235,\n    },\n    {\n      id: 2,\n      img: '/static/img/bag.png',\n      link: '#',\n      name: 'The Twill Snap Backpack',\n      color: 'Reverse Denim + Drown leather',\n      quantity: 1,\n      price: 65,\n    },\n    {\n      id: 3,\n      img: '/static/img/zip-bag.png',\n      link: '#',\n      name: 'The Twill Zip Tote',\n      color: 'Reverse Denim + Drown leather',\n      quantity: 1,\n      price: 48,\n    },\n  ],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case RESET_CART:\n      return {\n        ...state,\n        items: [],\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  SET_DATASOURCE,\n  SET_FETCH_LOADING,\n  SET_FETCH_ERROR,\n} from '../constants/fetch';\n\n/**\n * anyId: {\n *   id: id,\n *   error: error,\n *   loading: loading,\n *   datasource: datasource\n * }\n */\nconst defaultState = {};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SET_FETCH_ERROR:\n      return Object.assign({}, state, {\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          error: action.payload.error,\n        },\n      });\n    case SET_FETCH_LOADING:\n      return Object.assign({}, state, {\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          loading: action.payload.loading,\n        },\n      });\n    case SET_DATASOURCE:\n      return Object.assign({}, state, {\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          id: action.payload.id,\n          datasource: action.payload.datasource,\n        },\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport userReducer from './user';\nimport cartReducer from './cart';\nimport fetch from './fetch';\n\nexport default combineReducers({\n  form: formReducer,\n  user: userReducer,\n  cart: cartReducer,\n  fetch: fetch,\n});\n","export const GET_USER_POSITION = 'GET_USER_POSITION';\nexport const SET_USER_POSITION = 'SET_USER_POSITION';\n","export const RESET_CART = 'RESET_CART';\n","export const FETCH = 'FETCH';\nexport const SET_DATASOURCE = 'SET_DATASOURCE';\nexport const SET_FETCH_LOADING = 'SET_FETCH_LOADING';\nexport const SET_FETCH_ERROR = 'SET_FETCH_ERROR';\n","class RequestError extends Error {\n  constructor(message, body) {\n    super(message);\n    this.message = message;\n    this.body = body;\n  }\n}\n\nexport default RequestError;\n","import RequestError from './RequestError';\n\nconst YAPI_KEY = 'efd192fe-2537-4d5a-9686-4d4760dcc68a';\n\nconst Api = {\n  fetch(url, options = {}) {\n    return fetch(url, options)\n      .then((res) => {\n        const body = res.json();\n\n        if (!res.ok) {\n          throw new RequestError('Request error', body);\n        }\n\n        return body;\n      })\n      .then((data) => data);\n  },\n  SEND_ORDER_FORM: '/order',\n  GET_ADDRESS_BY_GEOCODE: `https://geocode-maps.yandex.ru/1.x/?apikey=${YAPI_KEY}&geocode=:coords&format=json&lang=en_RU&results=1`,\n  GET_COUNTRIES: 'https://restcountries.eu/rest/v2/all?fields=name',\n};\n\nexport default Api;\n","import { createAction } from 'redux-actions';\n\nconst payloadMapper = (payload = {}) => payload;\n\nexport default (type) => createAction(type, payloadMapper);\n","import createActionHelper from './createActionHelper';\n\nimport {\n  FETCH,\n  SET_DATASOURCE,\n  SET_FETCH_LOADING,\n  SET_FETCH_ERROR,\n} from '../constants/fetch';\n\nexport const fetchData = (payload) =>\n  createActionHelper(FETCH)({\n    id: payload.id,\n    url: payload.url,\n    options: payload.options,\n    mappingOptions: payload.mappingOptions,\n    onSuccess: payload.onSuccess,\n    onError: payload.onError,\n  });\n\nexport const setDatasource = (payload) =>\n  createActionHelper(SET_DATASOURCE)(payload);\n\nexport const setFetchLoading = (id, loading) =>\n  createActionHelper(SET_FETCH_LOADING)({ id, loading });\n\nexport const setFetchError = (id, error) =>\n  createActionHelper(SET_FETCH_ERROR)({ id, error });\n","import { call, put, takeEvery } from 'redux-saga/effects';\n\nimport Api from '../api';\nimport pathToRegexp from 'path-to-regexp';\n\nimport { FETCH } from '../constants/fetch';\nimport {\n  setDatasource,\n  setFetchLoading,\n  setFetchError,\n} from '../actions/fetch';\n\nexport function compileUrl(url, mappingOptions = {}) {\n  return pathToRegexp.compile(url)(mappingOptions);\n}\n\nexport function* fetchData({ payload }) {\n  const { id = 'lastRequest' } = payload;\n\n  try {\n    const { url, options, mappingOptions, onSuccess } = payload;\n    yield setLoading(id, true);\n    const datasource = yield call(fetchSaga, url, options, mappingOptions);\n    yield put(setDatasource({ id, datasource }));\n    if (typeof onSuccess === 'function') onSuccess(datasource);\n  } catch (e) {\n    const { onError } = payload;\n\n    yield put(setFetchError(id, e));\n    if (typeof onError === 'function') onError(e);\n    console.error(e);\n  } finally {\n    yield setLoading(id, false);\n  }\n}\n\nexport function* fetchSaga(url, options, mappingOptions = {}) {\n  try {\n    const datasource = yield call(\n      Api.fetch,\n      compileUrl(url, mappingOptions),\n      options\n    );\n\n    return datasource;\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n}\n\nexport function* setLoading(id, loading) {\n  yield put(setFetchLoading(id, loading));\n}\n\nexport default [takeEvery(FETCH, fetchData)];\n","import createActionHelper from './createActionHelper';\nimport { GET_USER_POSITION, SET_USER_POSITION } from '../constants/user';\n\nexport const getUserPosition = () => createActionHelper(GET_USER_POSITION)();\nexport const setUserPosition = (coords, country, city, postalCode) =>\n  createActionHelper(SET_USER_POSITION)({ coords, country, city, postalCode });\n","import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { setUserPosition } from '../actions/user';\nimport { GET_USER_POSITION } from '../constants/user';\nimport { fetchSaga } from './fetchSaga';\nimport Api from '../api';\nimport get from 'lodash.get';\n\nexport const geocodeBasePath =\n  'response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData';\n\nfunction getCurrentPosition() {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nexport function* getPosition() {\n  try {\n    if (navigator.geolocation) {\n      const { coords } = yield call(getCurrentPosition);\n      const { latitude, longitude } = coords;\n      let country, city, postalCode;\n\n      const data = yield call(\n        fetchSaga,\n        Api.GET_ADDRESS_BY_GEOCODE,\n        {\n          method: 'GET',\n        },\n        {\n          coords: `${longitude},${latitude}`,\n        }\n      );\n\n      if (\n        get(data, 'response.GeoObjectCollection.featureMember', []).length > 0\n      ) {\n        const components = get(data, `${geocodeBasePath}.Address.Components`);\n        country = get(\n          components.find(({ kind }) => kind === 'country'),\n          'name',\n          null\n        );\n        city = get(\n          components.find(({ kind }) => kind === 'locality'),\n          'name',\n          null\n        );\n        postalCode = get(data, `${geocodeBasePath}.Address.postal_code`);\n      }\n\n      yield call(\n        setPosition,\n        { latitude, longitude },\n        country,\n        city,\n        postalCode\n      );\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function* setPosition(coords, country, city, postalCode) {\n  yield put(setUserPosition(coords, country, city, postalCode));\n}\n\nexport default [takeEvery(GET_USER_POSITION, getPosition)];\n","import { all } from 'redux-saga/effects';\nimport fetchSaga from './fetchSaga';\nimport userSaga from './userSaga';\n\nconst generateSagas = () => {\n  return function*() {\n    yield all([...fetchSaga, ...userSaga]);\n  };\n};\n\nexport default generateSagas;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\nimport generateSagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState = {}) {\n  const store = createStore(\n    reducers,\n    initialState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  );\n  sagaMiddleware.run(generateSagas());\n  return store;\n}\n","export const FormStageId = {\n  SHIPPING: 'shipping',\n  BILLING: 'billing',\n  PAYMENT: 'payment',\n};\n\nexport const requiredFields = [\n  {\n    name: 'shipping.fullName',\n    errorName: 'full name',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.daytimePhone',\n    errorName: 'daytime phone',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.street',\n    errorName: 'street',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.city',\n    errorName: 'city',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.country',\n    errorName: 'country',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'shipping.zip',\n    errorName: 'zip',\n    errorPrefix: 'recipient',\n  },\n  {\n    name: 'billing.fullName',\n    errorName: 'full name',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.street',\n    errorName: 'street',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.city',\n    errorName: 'city',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.country',\n    errorName: 'country',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'billing.zip',\n    errorName: 'zip',\n    errorPrefix: 'billing contact',\n  },\n  {\n    name: 'payment.cardholder',\n    errorName: 'cardholder',\n    errorPrefix: 'payment',\n  },\n  {\n    name: 'payment.cardNumber',\n    errorName: 'card number',\n    errorPrefix: 'payment',\n  },\n  {\n    name: 'payment.expireDate',\n    errorName: 'expire date',\n    errorPrefix: 'payment',\n  },\n  {\n    name: 'payment.securityCode',\n    errorName: 'security code',\n    errorPrefix: 'payment',\n  },\n];\n","import get from 'lodash.get';\nimport set from 'lodash.set';\n\nimport { requiredFields } from '../constants';\n\nconst generateRequiredError = (fieldName, prefix = '') =>\n  `Please enter ${prefix} ${fieldName}`;\n\nconst emailReg = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nconst validate = (values) => {\n  const errors = {};\n\n  requiredFields.map(({ name, errorName, errorPrefix }) => {\n    if (!get(values, name)) {\n      set(errors, name, generateRequiredError(errorName, errorPrefix));\n    }\n  });\n\n  const email = get(values, 'billing.email');\n  if (email && !emailReg.test(email)) {\n    set(errors, 'billing.email', 'Email is not valid');\n  }\n\n  return errors;\n};\n\nexport default validate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nfunction FieldError({ error, errorPosition }) {\n  return (\n    <div\n      className={cn('form-field__error', `form-field__error--${errorPosition}`)}\n    >\n      {error}\n    </div>\n  );\n}\n\nFieldError.propTypes = {\n  error: PropTypes.string,\n  errorPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n};\n\nFieldError.defaultProps = {\n  errorPosition: 'top',\n};\n\nexport default FieldError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input({ type, ...rest }) {\n  return <input className=\"input\" type={type} {...rest} />;\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n};\n\nInput.defaultProps = {\n  type: 'text',\n};\n\nexport default Input;\n","import Input from './Input';\n\nexport default Input;\n","import React from 'react';\nimport RcInputNumber from 'rc-input-number';\n\nfunction InputNumber(props) {\n  return <RcInputNumber className=\"input-number\" {...props} />;\n}\n\nexport default InputNumber;\n","import InputNumber from './InputNumber';\n\nexport default InputNumber;\n","import React from 'react';\nimport MaskedInput from 'react-text-mask';\n\nfunction InputMask(props) {\n  return <MaskedInput className=\"input-mask\" {...props} />;\n}\n\nexport default InputMask;\n","import InputMask from './InputMask';\n\nexport default InputMask;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactAutoComplete from 'react-autocomplete';\n\nimport cn from 'classnames';\n\nfunction AutoComplete({\n  className,\n  labelFieldId,\n  items,\n  placeholder,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n\n  const getInputProps = () => ({\n    className: 'autocomplete__input',\n    placeholder: !open ? placeholder : '',\n  });\n  const onSelect = (value) => rest.onChange(value);\n\n  return (\n    <div\n      className={cn('autocomplete', className, {\n        'autocomplete--active': open,\n      })}\n    >\n      <ReactAutoComplete\n        inputProps={getInputProps()}\n        getItemValue={(item) => item[labelFieldId]}\n        shouldItemRender={(item, value) =>\n          !!~item[labelFieldId].toLowerCase().indexOf(value.toLowerCase())\n        }\n        items={items}\n        onMenuVisibilityChange={setOpen}\n        renderMenu={(items) => (\n          <div className=\"autocomplete__menu\" children={items} />\n        )}\n        renderItem={(item, isHighlighted) => (\n          <div\n            className={cn('autocomplete__item', {\n              'autocomplete__item--active': isHighlighted,\n            })}\n          >\n            {item[labelFieldId]}\n          </div>\n        )}\n        {...rest}\n        onSelect={onSelect}\n      />\n    </div>\n  );\n}\n\nAutoComplete.propTypes = {\n  className: PropTypes.string,\n  labelFieldId: PropTypes.string,\n  items: PropTypes.array,\n};\n\nAutoComplete.defaultProps = {\n  labelFieldId: 'label',\n  items: [],\n};\n\nexport default AutoComplete;\n","import AutoComplete from './AutoComplete';\n\nexport default AutoComplete;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Cleave from 'cleave.js/react';\n\nimport cn from 'classnames';\n\nconst CardType = {\n  AMEX: 'amex',\n  VISA: 'visa',\n  DINERS: 'diners',\n  MASTERCARD: 'mastercard',\n  JCB: 'jcb',\n  DISCOVER: 'discover',\n};\n\nconst UNKNOWN_CARD = 'unknown';\n\nfunction InputCreditCard({ className, ...rest }) {\n  const [type, setType] = useState('unknown');\n\n  return (\n    <div\n      className={cn('input-credit-card', {\n        [`input-credit-card--${type}`]: type !== UNKNOWN_CARD,\n      })}\n    >\n      <Cleave\n        className=\"input-credit-card__input\"\n        options={{\n          creditCard: true,\n          onCreditCardTypeChanged: setType,\n        }}\n        {...rest}\n      />\n    </div>\n  );\n}\n\nInputCreditCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default InputCreditCard;\n","import Input from './Input';\nimport InputNumber from './InputNumber';\nimport InputMask from './InputMask';\nimport AutoComplete from './AutoComplete';\nimport InputCreditCard from './InputCreditCard';\n\nexport default {\n  Input,\n  InputNumber,\n  InputMask,\n  AutoComplete,\n  InputCreditCard,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FieldError from './FieldError';\nimport controls from '../controls';\n\nimport cn from 'classnames';\n\nfunction Field(props) {\n  const {\n    id,\n    src,\n    label,\n    help,\n    className,\n    meta,\n    name,\n    errorPosition,\n    input,\n    ...rest\n  } = props;\n  const { error, touched } = meta;\n  const hasError = error && touched;\n  const control = controls[src];\n\n  if (!control) {\n    throw new Error(`src ${src} not found!`);\n  }\n\n  return (\n    <div\n      className={cn('form-field', className, {\n        'form-field--invalid': hasError,\n      })}\n    >\n      {label && (\n        <label className=\"form-field__label\" htmlFor={id || name}>\n          {label}\n        </label>\n      )}\n      <div className=\"form-field__control-container\">\n        {hasError && <FieldError error={error} errorPosition={errorPosition} />}\n        {React.createElement(control, Object.assign({}, rest, input))}\n        {help && <div className=\"form-field__control-help\">{help}</div>}\n      </div>\n    </div>\n  );\n}\n\nField.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  src: PropTypes.string,\n  label: PropTypes.string,\n  help: PropTypes.string,\n  className: PropTypes.string,\n  meta: PropTypes.object,\n  errorPosition: PropTypes.oneOfType(['top', 'right', 'bottom', 'left']),\n  input: PropTypes.object,\n};\n\nexport default Field;\n","import React from 'react';\nimport { Field as ReduxFormField } from 'redux-form';\nimport Field from './Field';\n\nfunction ReduxField(props) {\n  return <ReduxFormField {...props} component={Field} />;\n}\n\nexport default ReduxField;\n","import Field from './ReduxField';\n\nexport default Field;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nconst ButtonType = {\n  PRIMARY: 'primary',\n  LINK: 'link',\n  TRANSPARENT: 'transparent',\n};\n\nfunction Button({ className, children, onClick, type, buttonType }) {\n  return (\n    <button\n      type={buttonType}\n      onClick={onClick}\n      className={cn('button', className, {\n        'button--primary': type === ButtonType.PRIMARY,\n        'button--link': type === ButtonType.LINK,\n      })}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  buttonType: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf([\n    ButtonType.PRIMARY,\n    ButtonType.LINK,\n    ButtonType.TRANSPARENT,\n  ]),\n};\n\nButton.defaultProps = {\n  buttonType: 'button',\n  onClick: () => {},\n  type: ButtonType.PRIMARY,\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Field from '../../../components/Field';\nimport Button from '../../../components/Button';\n\nfunction Address({ label, prefix, onCountryDetect, countries }) {\n  return (\n    <>\n      <div className=\"order-form__fieldset\">\n        <Field\n          label={label}\n          src=\"Input\"\n          placeholder=\"Street Address\"\n          name={`${prefix}.street`}\n        />\n        <Field\n          src=\"Input\"\n          placeholder=\"Apt, Suite, Bldg, Gate Code. (optional)\"\n          name={`${prefix}.addressDetail`}\n        />\n      </div>\n      <div className=\"order-form__fieldset\">\n        <div className=\"order-form__field-with-action\">\n          <Field\n            src=\"Input\"\n            placeholder=\"City\"\n            name={`${prefix}.city`}\n            errorPosition=\"left\"\n          />\n          <Button\n            onClick={() => onCountryDetect(prefix)}\n            className=\"order-form__detect-country\"\n            type=\"transparent\"\n          />\n        </div>\n      </div>\n      <div className=\"order-form__fieldset order-form__fieldset-country-zip\">\n        <Field\n          className=\"order-form__country-field\"\n          src=\"AutoComplete\"\n          items={countries}\n          labelFieldId=\"name\"\n          placeholder=\"Country\"\n          name={`${prefix}.country`}\n          errorPosition=\"left\"\n        />\n        <Field\n          className=\"order-form__zip-field\"\n          src=\"Input\"\n          placeholder=\"ZIP\"\n          name={`${prefix}.zip`}\n          errorPosition=\"right\"\n        />\n      </div>\n    </>\n  );\n}\n\nAddress.propTypes = {\n  label: PropTypes.string,\n  prefix: PropTypes.string,\n  countries: PropTypes.array,\n};\n\nexport default Address;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nfunction Title({ level, subTitle, className, children }) {\n  const Tag = (props) =>\n    React.createElement(`h${level}`, {\n      className: cn('title', className),\n      ...props,\n    });\n\n  return (\n    <Tag>\n      <div className=\"title__main\">{children}</div>\n      {subTitle && <div className=\"title__sub\">{subTitle}</div>}\n    </Tag>\n  );\n}\n\nTitle.propTypes = {\n  level: PropTypes.number,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n};\n\nTitle.defaultProps = {\n  level: 1,\n  subTitle: null,\n};\n\nexport default Title;\n","import Title from './Title';\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport get from 'lodash.get';\n\nimport Address from './Address';\nimport Field from '../../../components/Field';\nimport Button from '../../../components/Button';\nimport Title from '../../../components/Title';\n\nimport { FormStageId } from '../constants';\n\nfunction ShippingInfo({\n  handleChangeStage,\n  validate,\n  values,\n  onCountryDetect,\n  countries,\n}) {\n  const onChangeStage = () => {\n    const errors = validate(values);\n\n    if (!get(errors, FormStageId.SHIPPING)) {\n      handleChangeStage(FormStageId.BILLING);\n    }\n  };\n\n  return (\n    <>\n      <Title level={2} className=\"order-form__title\">\n        Shipping Info\n      </Title>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"Input\"\n          label=\"Recipient\"\n          placeholder=\"Full Name\"\n          name=\"shipping.fullName\"\n          autoFocus={true}\n        />\n        <Field\n          className=\"order-form__daytime-phone-field\"\n          src=\"InputNumber\"\n          placeholder=\"Daytime Phone\"\n          help=\"For delivery questions only\"\n          name=\"shipping.daytimePhone\"\n          errorPosition=\"left\"\n        />\n      </div>\n      <Address\n        label=\"Address\"\n        prefix=\"shipping\"\n        onCountryDetect={onCountryDetect}\n        countries={countries}\n      />\n      <Button buttonType=\"submit\" onClick={onChangeStage}>\n        Continue\n      </Button>\n    </>\n  );\n}\n\nShippingInfo.propTypes = {\n  handleChangeStage: PropTypes.func,\n  validate: PropTypes.func,\n  values: PropTypes.object,\n  countries: PropTypes.array,\n};\n\nexport default ShippingInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport get from 'lodash.get';\n\nimport Address from './Address';\nimport Field from '../../../components/Field';\nimport Button from '../../../components/Button';\nimport Title from '../../../components/Title';\n\nimport { FormStageId } from '../constants';\n\nconst mapValuesByKeys = (keys, values) =>\n  keys.map((key) => ({\n    key: 'billing.' + key,\n    value: get(values, ['shipping', key]),\n  }));\n\nfunction BillingInfo({\n  handleChangeStage,\n  onValueChange,\n  validate,\n  values,\n  onCountryDetect,\n  countries,\n}) {\n  const onChangeStage = () => {\n    const errors = validate(values);\n\n    if (!get(errors, FormStageId.BILLING)) {\n      handleChangeStage(FormStageId.PAYMENT);\n    }\n  };\n\n  const changeSameShipping = () =>\n    onValueChange(\n      mapValuesByKeys(\n        ['fullName', 'street', 'addressDetail', 'city', 'country', 'zip'],\n        values\n      )\n    );\n\n  return (\n    <>\n      <Title\n        level={2}\n        className=\"order-form__title\"\n        subTitle={<span onClick={changeSameShipping}>Same as shipping</span>}\n      >\n        Billing Information\n      </Title>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"Input\"\n          label=\"Billing Contact\"\n          placeholder=\"Full Name\"\n          name=\"billing.fullName\"\n        />\n        <Field src=\"Input\" placeholder=\"Email Address\" name=\"billing.email\" />\n      </div>\n      <Address\n        label=\"Billing Information\"\n        prefix=\"billing\"\n        onCountryDetect={onCountryDetect}\n        countries={countries}\n      />\n      <Button buttonType=\"submit\" onClick={onChangeStage}>\n        Continue\n      </Button>\n    </>\n  );\n}\n\nBillingInfo.propTypes = {\n  handleChangeStage: PropTypes.func,\n  onValueChange: PropTypes.func,\n  validate: PropTypes.func,\n  values: PropTypes.object,\n  countries: PropTypes.array,\n};\n\nexport default BillingInfo;\n","import React from 'react';\n\nimport Title from '../../../components/Title';\nimport Field from '../../../components/Field';\nimport Button from '../../../components/Button';\n\nconst cardMaskPart = [/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\nconst cardMask = [\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n  ' ',\n  ...cardMaskPart,\n];\nconst expireDateMask = [/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/];\nconst securityCodeMask = cardMaskPart.slice();\n\nfunction Payment() {\n  return (\n    <>\n      <Title level={2} className=\"order-form__title\">\n        Payment\n      </Title>\n      <div className=\"order-form__security-help\">\n        This is a secure 128-bit SSL encrypted payment\n      </div>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"Input\"\n          label=\"Cardholder Name\"\n          placeholder=\"Name as it appears on your card\"\n          name=\"payment.cardholder\"\n        />\n      </div>\n      <div className=\"order-form__fieldset\">\n        <Field\n          src=\"InputCreditCard\"\n          label=\"Card Number\"\n          mask={cardMask}\n          placeholder=\"XXXX XXXX XXXX XXXX XXXX\"\n          name=\"payment.cardNumber\"\n        />\n      </div>\n      <div className=\"order-form__fieldset order-form__fieldset--row\">\n        <Field\n          className=\"order-form__expire-date-field\"\n          src=\"InputMask\"\n          mask={expireDateMask}\n          label=\"Expire Date\"\n          placeholder=\"MM / YY\"\n          name=\"payment.expireDate\"\n        />\n        <Field\n          className=\"order-form__security-code-field\"\n          src=\"InputMask\"\n          guide={false}\n          mask={securityCodeMask}\n          label=\"Security Code\"\n          name=\"payment.securityCode\"\n          errorPosition=\"right\"\n        />\n      </div>\n      <Button buttonType=\"submit\">Pay Securely</Button>\n    </>\n  );\n}\n\nexport default Payment;\n","import { createSelector } from 'reselect';\n\nexport const userSelector = (state) => state.user;\n\nexport const getUserPositionSelector = () =>\n  createSelector(\n    userSelector,\n    (user) => user.position || {}\n  );\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\n\nimport { reduxForm, getFormValues } from 'redux-form';\nimport validate from './validation';\nimport isEmpty from 'lodash.isempty';\nimport get from 'lodash.get';\n\nimport { FormStageId } from '../constants';\n\nimport ShippingInfo from './ShippingInfo';\nimport BillingInfo from './BillingInfo';\nimport Payment from './Payment';\nimport { getUserPositionSelector } from '../../../selectors/user';\nimport { geocodeBasePath } from '../../../sagas/userSaga';\n\nconst FormPage = {\n  [FormStageId.SHIPPING]: ShippingInfo,\n  [FormStageId.BILLING]: BillingInfo,\n  [FormStageId.PAYMENT]: Payment,\n};\n\nexport const ORDER_FORM_ID = 'orderForm';\n\nfunction OrderForm({\n  handleSubmit,\n  handleChangeStage,\n  activeId,\n  validate,\n  form,\n  change,\n  handleDetectCountry,\n  countries,\n}) {\n  const Component = FormPage[activeId];\n  const values = useSelector(getFormValues(form));\n  const position = useSelector(getUserPositionSelector());\n\n  /*eslint-disable */\n  const onValueChange = (values) =>\n    values.map(({ key, value }) => change(key, value));\n\n  /*eslint-enable */\n  const onCountryDetect = (prefix) => {\n    handleDetectCountry(get(values, `${prefix}.city`), (data) => {\n      const components = get(data, `${geocodeBasePath}.Address.Components`);\n      const country = get(\n        components.find(({ kind }) => kind === 'country'),\n        'name'\n      );\n\n      change(`${prefix}.country`, country);\n    });\n  };\n\n  useEffect(() => {\n    if (!isEmpty(position)) {\n      onValueChange([\n        {\n          key: 'shipping.country',\n          value: position.country,\n        },\n        {\n          key: 'shipping.city',\n          value: position.city,\n        },\n        {\n          key: 'shipping.zip',\n          value: position.postalCode,\n        },\n      ]);\n    }\n  }, [onValueChange, position]);\n\n  return (\n    <form className=\"order-form\" onSubmit={handleSubmit}>\n      <Component\n        handleChangeStage={handleChangeStage}\n        onValueChange={onValueChange}\n        validate={validate}\n        values={values}\n        onCountryDetect={onCountryDetect}\n        countries={countries}\n      />\n    </form>\n  );\n}\n\nOrderForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  handleChangeStage: PropTypes.func,\n  activeId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  validate: PropTypes.func,\n  form: PropTypes.string,\n  change: PropTypes.func,\n  countries: PropTypes.array,\n};\n\nexport default reduxForm({\n  form: ORDER_FORM_ID,\n  validate,\n})(OrderForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nfunction Breadcrumbs({ items, activeId, onClick }) {\n  const activeIndex = items.findIndex(({ id }) => id === activeId);\n\n  return (\n    <div className=\"breadcrumbs\">\n      <ul className=\"breadcrumbs__list\">\n        {items.map(({ id, link, label }, index) => (\n          <li\n            key={id}\n            className={cn('breadcrumbs__item', {\n              'breadcrumbs__item--active': id === activeId,\n              'breadcrumbs__item--link': index < activeIndex,\n            })}\n            onClick={() => {\n              if (index < activeIndex) onClick(id);\n            }}\n          >\n            {link ? <Link to={link}>{label}</Link> : label}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.array,\n  activeId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onClick: PropTypes.func,\n};\n\nBreadcrumbs.defaultProps = {\n  items: [],\n  activeId: null,\n  onClick: () => {},\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OrderSummaryItem({ id, name, img, color, quantity, price, link }) {\n  return (\n    <li key={id} className=\"order-summary__item order-summary-item\">\n      <div className=\"order-summary-item__img\">\n        <img src={img} alt=\"\" />\n      </div>\n      <div className=\"order-summary-item__info\">\n        <a className=\"order-summary-item__name\" href={link}>\n          {name}\n        </a>\n        <div className=\"order-summary-item__color\">{color}</div>\n        <div className=\"order-summary-item__quantity\">Quantity: {quantity}</div>\n      </div>\n      <div className=\"order-summary-item__cost\">${price}</div>\n    </li>\n  );\n}\n\nOrderSummaryItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  name: PropTypes.string,\n  img: PropTypes.string,\n  color: PropTypes.string,\n  quantity: PropTypes.number,\n  price: PropTypes.number,\n};\n\nexport default OrderSummaryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport OrderSummaryItem from './OrderSummaryItem';\n\nfunction OrderSummaryList({ items }) {\n  return (\n    <ul className=\"order-summary__list\">\n      {items.map((item) => (\n        <OrderSummaryItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n}\n\nOrderSummaryList.propTypes = {\n  items: PropTypes.array,\n};\n\nOrderSummaryList.defaultProps = {\n  items: [],\n};\n\nexport default OrderSummaryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OrderSummaryCosts({ subTotal, taxes, shipping }) {\n  return (\n    <div className=\"order-summary__costs order-summary-costs\">\n      <ul className=\"order-summary-costs__list\">\n        <li className=\"order-summary-costs__item\">\n          <div className=\"order-summary-costs__name\">Subtotal</div>\n          <div className=\"order-summary-costs__value\">${subTotal}</div>\n        </li>\n        <li className=\"order-summary-costs__item\">\n          <div className=\"order-summary-costs__name\">Shipping</div>\n          <div className=\"order-summary-costs__value\">{shipping}</div>\n        </li>\n        <li className=\"order-summary-costs__item\">\n          <div className=\"order-summary-costs__name\">Taxes</div>\n          <div className=\"order-summary-costs__value\">${taxes}</div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nOrderSummaryCosts.propTypes = {\n  subTotal: PropTypes.number,\n  taxes: PropTypes.number,\n  shipping: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default OrderSummaryCosts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OrderSummaryTotal({ total }) {\n  return (\n    <div className=\"order-summary__total\">\n      <div className=\"order-summary__total-name\">Total</div>\n      <div className=\"order-summary__total-value\">${total}</div>\n    </div>\n  );\n}\n\nOrderSummaryTotal.propTypes = {\n  total: PropTypes.number,\n};\n\nexport default OrderSummaryTotal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nfunction TermsAndConditions({ link, className }) {\n  return (\n    <div className={cn('terms', className)}>\n      <span className=\"terms__text\">\n        All purchases are subject to our{' '}\n        <a className=\"terms__link\" href={link}>\n          Terms and Conditions\n        </a>\n        .\n      </span>\n    </div>\n  );\n}\n\nTermsAndConditions.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n};\n\nTermsAndConditions.defaultProps = {\n  link: '#',\n};\n\nexport default TermsAndConditions;\n","import TermsAndConditions from './TermsAndConditions';\n\nexport default TermsAndConditions;\n","import React, { useState } from 'react';\n\nimport Title from '../../../components/Title';\nimport OrderSummaryList from './OrderSummaryList';\nimport OrderSummaryCosts from './OrderSummaryCosts';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport TermsAndConditions from '../../../components/TermsAndConditions';\n\nconst TAXES = 12.12;\nconst SHIPPING = 'Free';\n\nfunction OrderSummary({ cartItems }) {\n  const [items] = useState(cartItems);\n\n  const subTotal = items.reduce((acc, { price }) => {\n    return acc + price;\n  }, 0);\n  const total = subTotal + TAXES;\n\n  return (\n    <div className=\"order-summary\">\n      <Title\n        className=\"order-summary__title\"\n        level={3}\n        subTitle={\n          <a href=\"#\" className=\"order-summary__edit-link\">\n            edit order\n          </a>\n        }\n      >\n        Order Summary\n      </Title>\n      <OrderSummaryList items={items} />\n      <OrderSummaryCosts\n        subTotal={subTotal}\n        shipping={SHIPPING}\n        taxes={TAXES}\n      />\n      <OrderSummaryTotal total={total} />\n      <TermsAndConditions className=\"order-summary__terms\" />\n    </div>\n  );\n}\n\nexport default OrderSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactToPrint from 'react-to-print';\nimport Title from '../../../components/Title';\nimport Button from '../../../components/Button';\n\nfunction OrderSuccess({ estimatedDate, orderNumber, pageToPrintRef }) {\n  return (\n    <div className=\"order-success\">\n      <Title className=\"order-success__title\" level={2}>\n        Thank you for your order!\n      </Title>\n      <div className=\"order-success__content\">\n        <div className=\"order-success__number\">\n          Order number is: {orderNumber}\n        </div>\n        <div className=\"order-success__email\">\n          Your will receive an email confirmation shortly to{' '}\n          <a href=\"mailto:name@rapidtables.com\">jonathan.smith@gmail.com</a>\n        </div>\n        <div className=\"order-success__estimated-date\">\n          Estimated delivery Day is <strong>{estimatedDate}</strong>\n        </div>\n        <div className=\"order-success__print\">\n          <ReactToPrint\n            trigger={() => <Button type=\"link\">Print Recipe</Button>}\n            content={() => pageToPrintRef}\n            bodyClass=\"body--print\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOrderSuccess.propTypes = {\n  estimatedDate: PropTypes.string,\n  orderNumber: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default OrderSuccess;\n","import OrderSuccess from './OrderSuccess';\n\nexport default OrderSuccess;\n","import { createSelector } from 'reselect';\n\nexport const cartSelector = (state) => state.cart;\n\nexport const getCartItemsSelector = () =>\n  createSelector(\n    cartSelector,\n    (cart) => cart.items || []\n  );\n\nexport const getCartItemsCountSelector = () =>\n  createSelector(\n    cartSelector,\n    (cart) => (Array.isArray(cart.items) ? cart.items.length : 0)\n  );\n","import createActionHelper from './createActionHelper';\n\nimport { RESET_CART } from '../constants/cart';\n\nexport const resetCart = () => createActionHelper(RESET_CART)();\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ORDER_FORM_ID } from './OrderForm/OrderForm';\nimport { fetchData } from '../../actions/fetch';\n\nimport Breadcrumbs from '../../components/Breadcrumbs';\nimport OrderForm from './OrderForm/OrderForm';\nimport OrderSummary from './OrderSummary/OrderSummary';\nimport OrderSuccess from './OrderSuccess';\n\nimport { FormStageId } from './constants';\n\nimport cn from 'classnames';\nimport get from 'lodash.get';\nimport Api from '../../api';\nimport { getCartItemsSelector } from '../../selectors/cart';\nimport { resetCart } from '../../actions/cart';\nimport isEmpty from 'lodash.isempty';\n\nconst breadcrumbItems = [\n  {\n    id: FormStageId.SHIPPING,\n    label: 'Shipping',\n  },\n  {\n    id: FormStageId.BILLING,\n    label: 'Billing',\n  },\n  {\n    id: FormStageId.PAYMENT,\n    label: 'Payment',\n  },\n];\n\nfunction OrderPage() {\n  const dispatch = useDispatch();\n  const cartItems = useSelector(getCartItemsSelector());\n  const pageToPrintRef = useRef(null);\n\n  const [activeId, setActiveId] = useState(FormStageId.SHIPPING);\n  const [isOrderSuccess, setOrderSuccess] = useState(false);\n  const [orderData, setOrderData] = useState(null);\n  const [countries, setCountries] = useState([]);\n\n  const onSubmit = (values) => {\n    dispatch(\n      fetchData({\n        id: ORDER_FORM_ID,\n        url: Api.SEND_ORDER_FORM,\n        options: {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(values),\n        },\n        onSuccess: (data) => {\n          setOrderData(data);\n          setOrderSuccess(true);\n          dispatch(resetCart());\n        },\n        onError: (e) => {\n          // TODO типа есть endpoint\n          const data = {\n            estimatedDate: 'Friday 1st April 2016',\n            orderNumber: 188787788,\n          };\n\n          setOrderData(data);\n          setOrderSuccess(true);\n          dispatch(resetCart());\n        },\n      })\n    );\n  };\n\n  const handleDetectCountry = (value, onSuccess, onError) => {\n    if (!isEmpty(value)) {\n      dispatch(\n        fetchData({\n          url: Api.GET_ADDRESS_BY_GEOCODE,\n          mappingOptions: {\n            coords: value,\n          },\n          onSuccess,\n          onError,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    dispatch(\n      fetchData({\n        id: 'countries',\n        url: Api.GET_COUNTRIES,\n        onSuccess: setCountries,\n      })\n    );\n  }, [dispatch]);\n\n  return (\n    <div ref={pageToPrintRef} className=\"order-page\">\n      <div\n        className={cn({\n          'order-page__form': !isOrderSuccess,\n          'order-page__success': isOrderSuccess,\n        })}\n      >\n        {!isOrderSuccess ? (\n          [\n            <Breadcrumbs\n              key=\"breadcrumbs\"\n              items={breadcrumbItems}\n              activeId={activeId}\n              onClick={setActiveId}\n            />,\n            <OrderForm\n              key=\"orderForm\"\n              onSubmit={onSubmit}\n              activeId={activeId}\n              handleChangeStage={setActiveId}\n              handleDetectCountry={handleDetectCountry}\n              countries={countries}\n            />,\n          ]\n        ) : (\n          <OrderSuccess\n            pageToPrintRef={get(pageToPrintRef, 'current', null)}\n            {...orderData}\n          />\n        )}\n      </div>\n      <div\n        className={cn('order-page__summary', {\n          'order-page__summary--translucent': isOrderSuccess,\n        })}\n      >\n        <OrderSummary cartItems={cartItems} />\n      </div>\n    </div>\n  );\n}\n\nexport default OrderPage;\n","import OrderPage from './OrderPage';\n\nexport default OrderPage;\n","import React from 'react';\n\nimport OrderPage from '../pages/OrderPage';\n\nconst routes = [\n  {\n    path: '/',\n    render: (props) => <OrderPage {...props} />,\n  },\n];\n\nexport default routes;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nfunction Brand() {\n  return (\n    <Link to=\"/\" className=\"header__brand\">\n      Front-end Developer Test Task\n    </Link>\n  );\n}\n\nexport default Brand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport cart from '../../assets/img/cart.svg';\n\nfunction CartBox({ numberOfGoods }) {\n  return (\n    <Link to=\"/order\" className=\"header__cart-box cart-box\">\n      {!!numberOfGoods && <div className=\"cart-box__text\">cart</div>}\n      <div className=\"cart-box__cart\">\n        <div className=\"cart-box__goods\">\n          {!!numberOfGoods && numberOfGoods}\n        </div>\n        <img src={cart} alt=\"cart-box\" width=\"21\" height=\"16\" />\n      </div>\n    </Link>\n  );\n}\n\nCartBox.propTypes = {\n  numberOfGoods: PropTypes.number,\n};\n\nexport default CartBox;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getCartItemsCountSelector } from '../../selectors/cart';\n\nimport Brand from './Brand';\nimport CartBox from './CartBox';\n\nfunction Header() {\n  const numberOfGoods = useSelector(getCartItemsCountSelector());\n\n  return (\n    <div className=\"header__container\">\n      <header className=\"header\">\n        <Brand />\n        <CartBox numberOfGoods={numberOfGoods} />\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\r\nimport Header from '../Header';\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <main className=\"main\">{children}</main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import Layout from './Layout';\r\n\r\nexport default Layout;\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUserPosition } from '../../actions/user';\n\nfunction Navigator({ children }) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUserPosition());\n  }, [dispatch]);\n  return children;\n}\n\nexport default Navigator;\n","import Navigator from './Navigator';\n\nexport default Navigator;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport './assets/scss/main.scss';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport routes from './routes';\n\nimport Layout from './components/Layout';\nimport Navigator from './components/Navigator';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Navigator>\n        <Router>\n          <Layout>\n            <Switch>\n              {routes.map((props, index) => (\n                <Route key={index} {...props} />\n              ))}\n            </Switch>\n          </Layout>\n        </Router>\n      </Navigator>\n    </Provider>\n  );\n}\n\nexport default App;\n","// prettier-ignore\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}